testx.dropna?
testx2 = testx.dropna(how='any',axis=1)
tfin = np.isfinite(testx2).all()
len(testx2.columns)
len(tfin)
len(testx2)
rval = clf.predict(testx2)
testx2 = testx.fillna?
testx2 = testx.fillna(value=0)
len(testx2)
len(testx2.columns)
tfin = np.isfinite(testx2).all()
tfin
rval = clf.predict(testx2)
rval[0:5]
rval[0:20]
rval = clf.predict_proba(testx2)
rval[0:20]
pd.DataFrame?
df_sub = pd.DataFrame(rval)
df_sub[0:3]
rval = clf.predict_proba?
testx2.index[0:3]
testx2.index[0:4]
rval2 = rval
df2 = df_sub
df2.set_index?
df2.set_index(testx2.index)
df2[0:3]
df2 = df2.set_index(testx2.index)
df2[0:3]
df2.columns = ['predict_0','predict_1','predict_2']
df2[0:3]
df2.to_csv?
ls ..
df2.to_csv('../data/submit1.csv')
summarize(test,False)
summarize(test,False,False)
pd.Series.unique?
pd.DataFrame.unique
df3 = df2
df3.id[0:3]
df3.columns
df3.index
df3 = df3.drop_duplicates('index')
df3['id'] = df3.index
df3 = df3.drop_duplicates('id')
len(df3)
df3[0:3]
df2['id'] = testx2.id
df3['id'] = testx2.id
df3 = df3.drop_duplicates('id')
len(df3)
df3.to_csv('../data/submit2.csv')
history



std = np.std([tree.feature_importances_ for tree in d.estimators_],
             axis=0)
indices = np.argsort(importances)[::-1]

# Print the feature ranking
print("Feature ranking:")

for f in range(X.shape[1]):
    print("%d. feature %d (%f)" % (f + 1, indices[f], importances[indices[f]]))

# Plot the feature importances of the d
plt.figure()
plt.title("Feature importances")
plt.bar(range(X.shape[1]), importances[indices],
       color="r", yerr=std[indices], align="center")
plt.xticks(range(X.shape[1]), indices)
plt.xlim([-1, X.shape[1]])
plt.show()

aa = []
for i in range(0,len(cols)):
  aa.append((cols[i],importances[i]))

a.columns = ['predict_0','predict_1','predict_2','id']
a.to_csv('../data/submit5.csv',index=False)



----------------

lf0 = results[results.log_feature_sev0_top20 > 0]
lf1 = results[results.log_feature_sev1_top20 > 0]
lf2 = results[results.log_feature_sev2_top20 > 0]
lf01 = lf0[lf0.log_feature_sev1_top20 > .75]
lf02 = lf0[lf0.log_feature_sev2_top20 > .75]
lf12 = lf1[lf1.log_feature_sev2_top20 > .75]
lf02 = lf0[lf0.log_feature_sev2_top20 > .75]
lf21 = lf2[lf2.log_feature_sev1_top20 > .75]
len(lf01)
len(lf02)
print(len(lf12)/len(lf1))
print(len(lf21)/len(lf2))
only = 'lf0:' + str(len(lf0)) + ' -- lf1: ' + str(len(lf1)) + ' -- lf2: ' + str(len(lf2))
lf_1 = 'lf01: ' + str(len(lf01)) + ' -- lf02: ' + str(len(lf02)) + ' -- lf12: ' + str(len(lf12))
print(only)
print(lf_1)




----------------

import main
import helpers
test = main.extract(True)
results = main.extract(False)
train, y, test = main.do_all(results, test,True)
tid = test['id']
tid = tid.copy()
c1,c2,c3,tid, testx, hout = fits(train,y,tid,test,True)
pred = main.plot_predict(c1,c2,c3,tid,testx, hout,True)
[df1, df2, df3, pred1, pred2, pred3] = pred
df1.columns = ['predict_0','predict_1','predict_2','id']
df1.to_csv('../data/submit5a.csv',index=False)
df2.columns = ['predict_0','predict_1','predict_2','id']
df2.to_csv('../data/submit6a.csv',index=False)
df3.columns = ['predict_0','predict_1','predict_2','id']
df4.columns = ['predict_0','predict_1','predict_2','id']
df3.to_csv('../data/submit7.csv',index=False)
df4.to_csv('../data/submit8.csv',index=False)
